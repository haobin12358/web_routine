<style scoped lang="less" rel="stylesheet/less">
    @import "../../styles/common";
.m-editCost{
    .m-title{
        padding: 20rpx 30rpx;
    }
    .m-one-cost{
        border-top: 1px solid @border-color;
        display: -webkit-box;
        /*display: box;*/
        overflow-x: auto;
        overflow-y: hidden;
        -webkit-overflow-scrolling: touch;
        -webkit-box-orient:horizontal;
        box-orient:horizontal;
        /*width: 750rpx;*/
        padding: 0!important;
        .m-cost-info{
            width: 750rpx;
            .flex-row(flex-start);
            border-bottom: 1px solid @border-color;
        }
        .m-row-box{
            width: 686rpx;
            .m-one-cost-row{
                padding: 20rpx 30rpx 20rpx 0;
                border-bottom: 1px solid @border-color;
                .flex-row(space-between);
                &:last-child{
                    border-bottom: none;
                }
                input.m-tr{
                    text-align: right;
                }
                textarea{
                    width: 460rpx;
                    height: 100rpx;
                    text-align: left;
                    margin-left: 30rpx;
                    padding: 10rpx;
                    box-sizing: border-box;
                }
                &.m-detail{
                    .flex(row,flex-start,flex-start);
                }
                &.m-radio{
                    .flex(row,flex-start,center);
                }
            }
        }
        .m-delete-btn{
            width: 144rpx;
            height: 422rpx;
            line-height: 422rpx;
            background-color: #D83A3A;
            font-size: 30rpx;
            font-weight: 500;
            text-align: center;
            color: #fff;
        }
    }
    .m-cut-add-icon{
        display: inline-block;
        width: 30rpx;
        height: 30rpx;
        margin: 0 20rpx;
    }
    .m-add-box{
        padding: 20rpx 0;
        border-bottom: 10rpx solid #F4F4F4;
    }
    /* 隐藏下方的滚动条 */
    .m-one-cost::-webkit-scrollbar {
        background-color: transparent;
    }
}

</style>
<template>
    <view class="m-editCost">
        <view class="m-title m-grey">费用明细</view>
        <view class="m-one-cost " wx:for="{{cost_list}}" wx:key="{{index}}" wx:if="{{!item.delete}}">
                <view class="m-cost-info">
                    <image src="{{img_src}}common/icon-cut.png" class="m-cut-add-icon" @tap="cutCost({{index}})"></image>
                    <view class="m-row-box" wx:if="{{cost_name != '退团'}}">
                        <view class="m-one-cost-row">
                            <span>{{cost_name}}名称</span>
                            <input type="text" class="m-tr" value="{{cost_name == '费用' ? item.cosname:item.inname}}" bindinput="nameInput" data-name="{{index}}" placeholder="20字以内" />
                        </view>
                        <view class="m-one-cost-row">
                            <span>金额</span>
                            <input type="number" value="{{cost_name == '费用' ? item.cossubtotal : item.incost}}" class="m-tr" bindinput="moneyInput" data-name="{{index}}" placeholder="有人报名后不能修改" />
                        </view>
                        <view class="m-one-cost-row m-detail">
                            <span>{{cost_name}}说明</span>
                            <textarea  placeholder="20字以内" value="{{cost_name == '费用' ? item.cosdetail :item.incontent}}" bindinput="detailInput" data-name="{{index}}" />
                        </view>
                        <view class="m-one-cost-row " wx:if="{{show_radio}}">
                           <span class="m-mr"> 是否为必要保险</span>     <switch value="{{item.intype}}" data-name="{{index}}" bindchange="switchChange" color="#FFCE00"/>
                        </view>
                    </view>
                    <view class="m-row-box" wx:else>
                      <view class="m-one-cost-row">
                        <span>距离活动开始时间</span>
                        <picker mode="multiSelector" bindchange="bindMultiPickerChange" bindcolumnchange="bindMultiPickerColumnChange" data-name="{{index}}" value="{{item.multiIndex}}" range-key="name" range="{{item.multiArray}}">
                          <view class="m-flex-end">
                            <span class="m-grey" wx:if="{{item.multiArray[0][item.multiIndex[0]].name == undefined}}">选择</span>
                            <span wx:else>
                              <span wx:if="{{item.multiArray[0][item.multiIndex[0]].name }}">{{item.multiArray[0][item.multiIndex[0]].name}}</span>
                              <span wx:if="{{item.multiArray[1][item.multiIndex[1]].name}}">{{item.multiArray[1][item.multiIndex[1]].name}}</span>
                            </span>
                            <image src="{{img_src}}common/icon-more.png" class="m-icon-more"></image>
                          </view>
                        </picker>
                      </view>
                      <view class="m-one-cost-row">
                        <span>扣款金额</span>
                        <input type="number" value="{{cost_name == '费用' ? item.cossubtotal : item.incost}}" class="m-tr" bindinput="moneyInput" data-name="{{index}}" placeholder="有人报名后不能修改" />
                      </view>
                    </view>
                </view>
<!--                <view class="m-delete-btn">删除</view>-->
            </view>
        <view class="m-flex-start m-add-box">
            <image src="{{img_src}}common/icon-add.png" class="m-cut-add-icon" @tap="addCost"></image>
            <span wx:if="{{cost_name != '退团'}}">添加费用</span>
            <span wx:else>添加时间及金额</span>
        </view>
        <view class="m-foot-btn m-one" wx:if="{{cost_list.length >0}}" @tap="saveCost">保存</view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import tip from '../../utils/tip';
    import api from '../../api/api';
    const arr = [];
    for(let i=1;i<24;i++){
      arr.push({value:i,name:i +'小时'});
    }
    export default class editCost extends wepy.page {
        config = {
            navigationBarTitleText: '活动费用',
            enablePullDownRefresh: true
        }
        components = {}
        data = {
          img_src:api.img_src,
            show_radio:false,
            cost_list:[],
            cost_name:'费用',
            form_data:null,
            all_data:null,
            multiArray:[[],[]],
            multiIndex:[]
        }

        setCost(){
            let that = this;
            wx.request({
                url: api.set_cost + '?token=' +wx.getStorageSync('token'),
                method:"post",
                data:{
                    costs:that.cost_list
                },
                success: function (resule){
                    if(resule.data.status == 200){
                        that.all_data.form_data.costs = resule.data.data;
                        that.all_data.cost_list = that.cost_list;
                        wx.navigateTo({
                            url: '/pages/index/editActivity?data=' + encodeURIComponent(JSON.stringify(that.all_data))
                        });
                    }else{
                        wx.showToast({
                            title: resule.data.message,
                            icon: 'none',
                            duration: 2000
                        })
                        that.$apply();
                    }

                }
            })
        }
        setInsurance(){
            let that = this;

            for(let i in this.cost_list){
                if(this.cost_list[i].intype){
                    this.cost_list[i].intype = 1;
                }else{
                    this.cost_list[i].intype = 0;
                }
            }

            wx.request({
                url: api.set_insurance + '?token=' +wx.getStorageSync('token'),
                method:"post",
                data:{
                    insurance:that.cost_list
                },
                success: function (resule){
                    if(resule.data.status == 200){
                        that.all_data.form_data.insurances = resule.data.data;
                        that.all_data.insurances_list = that.cost_list;
                        wx.navigateTo({
                            url: '/pages/index/editActivity?data=' + encodeURIComponent(JSON.stringify(that.all_data))
                        });
                    }else{
                        wx.showToast({
                            title: resule.data.message,
                            icon: 'none',
                            duration: 2000
                        })
                        that.$apply();
                    }

                }
            })
        }
        setWithdraw(){
        let that = this;

        for(let i in this.cost_list){

        }

        wx.request({
          url: api.set_insurance + '?token=' +wx.getStorageSync('token'),
          method:"post",
          data:{
            insurance:that.cost_list
          },
          success: function (resule){
            if(resule.data.status == 200){
              that.all_data.form_data.insurances = resule.data.data;
              that.all_data.withdraw_list = that.cost_list;
              wx.navigateTo({
                url: '/pages/index/editActivity?data=' + encodeURIComponent(JSON.stringify(that.all_data))
              });
            }else{
              wx.showToast({
                title: resule.data.message,
                icon: 'none',
                duration: 2000
              })
              that.$apply();
            }

          }
        })
      }
        onLoad(options) {

            // if(options.cost_list){
            //     this.cost_list = JSON.parse(options.cost_list);
            //
            // }
            if(options.data){
                this.all_data = JSON.parse(decodeURIComponent(options.data));
                if(options.from == 'insurance'){
                    this.show_radio = true;
                    this.cost_name = '保险';
                    this.cost_list =  this.all_data.insurances_list;
                }else if(options.from == 'withdraw'){
                    this.cost_list = this.all_data.withdraw_list;
                    this.cost_name = '退团';
                }else{
                    this.cost_list =  this.all_data.cost_list;
                }

            }

            this.$apply();

        }

        methods = {
            //添加费用
            addCost(){
                if(this.cost_name == '费用'){
                    this.cost_list.push({
                        cosid:'',
                        cosname:'',
                        cosdetail:'',
                        cossubtotal:'',
                        delete:false
                    });
                }else if(this.cost_name == '保险'){
                    this.cost_list.push({
                        inid:'',
                        inname:'',
                        incontent:'',
                        incost:'',
                        intype:false,
                        delete:false
                    });
                }else if(this.cost_name == '退团'){
                  this.cost_list.push({
                    inid:'',
                    incost:'',
                    delete:false,
                    multiIndex:[],
                    multiArray:[[{
                      name:'0天',
                      value:0
                    },
                      {
                        name:'1天',
                        value:1
                      },{
                        name:'2天',
                        value:2
                      },
                    ],arr]
                  });
                }
            },
            //删除费用
            cutCost(index){
                let that = this;
                wx.showModal({
                    title: '提示',
                    content: '确认删除此费用吗？',
                    success (res) {
                        if (res.confirm) {
                           // that.cost_list.splice(index,1);
                           that.cost_list[index].delete = true;
                           that.$apply();
                        } else if (res.cancel) {
                            console.log('用户点击取消')
                        }
                    }
                })

            },
            saveCost(){
              switch (this.cost_name) {
                case '费用':
                  this.setCost();
                  break;
                case '保险':
                  this.setInsurance();
                  break;
                case '退团':
                  this.setWithdraw();
                  break;
              }
            },
            nameInput(e){
             console.log(e)
                let index = e.currentTarget.dataset.name;
             if(this.cost_name == '费用'){
                 this.cost_list[index].cosname = e.detail.value;
             }else{
                 this.cost_list[index].inname = e.detail.value;
             }
                this.$apply();

            },
            moneyInput(e){
                let index = e.currentTarget.dataset.name;
                let value =parseFloat(e.detail.value);
                switch (this.cost_name) {
                  case '费用':
                    this.cost_list[index].cossubtotal = value;
                    break;
                  case '保险':
                    this.cost_list[index].incost = value;
                    break;
                  case '退团':
                    this.cost_list[index].incost = value;
                    break;
                }
                this.$apply();
            },
            detailInput(e){
                let index = e.currentTarget.dataset.name;
                if(this.cost_name == '费用'){
                    this.cost_list[index].cosdetail = e.detail.value;
                }else{
                    this.cost_list[index].incontent = e.detail.value;
                }
                this.$apply();
            },
            switchChange(e){
                let index = e.currentTarget.dataset.name;
                this.cost_list[index].intype = e.detail.value;
                this.$apply();
            },
          bindMultiPickerChange(e) {
            let i = e.target.dataset.name;
            this.cost_list[i].multiIndex =  e.detail.value;
            this.$apply();

          },
          bindMultiPickerColumnChange(e) {
            let i = e.target.dataset.name;
            if(e.detail.column == 0){
              if(e.detail.value == 0){
                this.cost_list[i].multiArray[1] = arr;
              }else{
                this.cost_list[i].multiArray[1] = []
              }
            }
            this.$apply();
          }
        }
    }
</script>
